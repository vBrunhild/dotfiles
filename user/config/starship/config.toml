"$schema" = 'https://starship.rs/config-schema.json'

add_newline = false
continuation_prompt = ' '

format = """
$username\
$directory\
${custom.git}\
$git_state\
$rust\
$golang\
$python\
$memory_usage\
$cmd_duration\
$line_break\
$character
"""

[username]
show_always = true
style_user = "fg:red"
style_root = "bold fg:red"
format = '[$user]($style) '

[directory]
style = "fg:yellow"
read_only_style = "fg:yellow"
repo_root_style = "bold fg:yellow"
format = "[$path]($style) "
read_only = ""
home_symbol = "~"
truncation_symbol = "…/"
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true

[git_branch]
symbol = ""
style = "fg:blue"
format = '([$symbol $branch]($style))'
only_attached = true
ignore_branches = []
truncation_length = 25
truncation_symbol = "..."
always_show_remote = false
disabled = false

[git_commit]
style = "fg:blue"
format = "([($tag)(@$hash)]($style))"
commit_hash_length = 7
only_detached = true
tag_symbol = "󰓼 "
tag_disabled = false
disabled = false

[git_status]
style = "fg:blue"
format = '([$ahead_behind]($style))([$all_status]($style))'
stashed = "*${count}"
ahead = "⇡${count}"
behind = "⇣${count}"
up_to_date = ""
diverged = "⇡${ahead_count}⇣${behind_count}"
conflicted = "=${count}"
deleted = "×${count}"
renamed = "»${count}"
modified = "!${count}"
staged = "+${count}"
untracked = "?${count}"
ignore_submodules = false
disabled = false

[git_state]
style = "fg:red"
format = '([$state($progress_current/$progress_total)]($style bold)) '
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
disabled = false

[custom.git]
description = "git modules aggregation"
command = '''
    starship module git_branch
    starship module git_commit
    starship module git_status
'''
when = "true"
format = "[$output](style) "
require_repo = true
disabled = false

[memory_usage]
style = "fg:green"
format = '[${ram}]($style) '
threshold = -1
disabled = false

[cmd_duration]
style = "fg:cyan"
min_time = 0
show_milliseconds = true
format = "[$duration](style)"

[character]
success_symbol = "[❯](fg:green)"
error_symbol = "[❯](fg:red)"

[c]
symbol = " "
format = '[$symbol ($version)]($style) '

[rust]
symbol = ""
format = '[$symbol ($version)]($style) '

[golang]
symbol = ""
format = '[$symbol ($version)]($style) '

[python]
symbol = " "
format = '[$symbol ($version)]($style) '
